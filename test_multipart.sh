#!/bin/bash

# Ensure UTF-8 encoding
export LC_ALL=C.UTF-8
export LANG=C.UTF-8

echo -e "\033[32mTesting multipart/form-data API...\033[0m"
echo "Locale: $LANG"

# Check if test PDF file exists
testFile="test_receipt.pdf"
if [ ! -f "$testFile" ]; then
    echo -e "\033[31mError: $testFile not found!\033[0m"
    echo -e "\033[33mPlease place a test PDF file named 'test_receipt.pdf' in the current directory\033[0m"
    exit 1
fi

echo -e "\033[36mUsing file: $testFile\033[0m"

# Note: Deal number will be auto-generated by server (ignore client-provided NO)
echo -e "\033[36mServer will auto-generate deal number\033[0m"

# Prepare the JSON data - Git Bashは標準でUTF-8なので日本語そのまま使える
dealData=$(cat <<EOF
{
    "period": "2024-01",
    "DealType": "領収書",
    "DealDate": "$(date +%Y-%m-%d)",
    "DealName": "マルチパート文房具購入",
    "DealPartner": "UTF-8テスト用品店",
    "DealPrice": 1500,
    "DealRemark": "multipart/form-data UTF-8テスト",
    "RecStatus": "NEW"
}
EOF
)

# Remove newlines for compact JSON
dealData=$(echo "$dealData" | tr -d '\n' | tr -s ' ')

echo -e "\n\033[33mSending request...\033[0m"

# Test multipart/form-data upload using curl
response=$(curl -X POST http://localhost:8080/api/v1/deals \
  -F "dealData=$dealData" \
  -F "file=@$testFile" 2>/dev/null)

echo -e "\n\033[33mResponse:\033[0m"
echo "$response" | jq .

# Extract deal number from response
dealNo=$(echo "$response" | jq -r .dealNo)
echo -e "\n\033[36mGenerated Deal Number: $dealNo\033[0m"

# Check database
echo -e "\n\033[33mDatabase Check:\033[0m"
echo "Deal Partner (should be UTF-8):"
sqlite3 data/2024-01/Denchokun.db "SELECT DealPartner FROM Deals WHERE NO='$dealNo';"

echo "File Path:"
sqlite3 data/2024-01/Denchokun.db "SELECT FilePath FROM Deals WHERE NO='$dealNo';"

echo "File exists:"
filePath=$(sqlite3 data/2024-01/Denchokun.db "SELECT FilePath FROM Deals WHERE NO='$dealNo';")
if [ -f "data/2024-01/$filePath" ]; then
    echo "✓ File saved: data/2024-01/$filePath"
    ls -lh "data/2024-01/$filePath"
else
    echo "✗ File not found"
fi

echo -e "\n\033[32mTest completed!\033[0m"
echo -e "\033[36mOriginal file preserved at: $testFile\033[0m"